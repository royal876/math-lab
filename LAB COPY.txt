REGULAR FULSI:-

#include<stdio.h>
#include<math.h>
float f(float x)
{
    return(x*x*x-5*x-7);
}
int main()
{
    float a,b,c,e;
    int k=0;
    printf("enter the accuracy");
    scanf("%f",&e);
    do
    {
        printf("enter the value of a&b");
        scanf("%f%f",&a,&b);
    }    
        while(f(a)*f(b)>0);
        do
        {
        c=a-((f(a)*(a-b))/(f(a)-f(b)));
        printf("\nk=%f\ta=%f\tb=%f\tc=%f",k,a,b,c);
        if(f(a)*f(c)<0)
        b=c;
        else
        a=c;
        k=k+1;
        }
        while(fabs(f(c))>e);
            printf("\niteration=%d\troot=%f",k,c);
    }


NEWTON RAPSON:-

#include<stdio.h>
#include<math.h>
float f(float x)
{
    return(x*x*x-9*x+1);
}
float f1(float x)
{
    return(x*x*x-9);
}
int main()
{
    float a,b,c,e;
    int n=0;
    printf("enter the accuracy");
    scanf("%f",&e);
    do
    {
        printf("enter the value of a&b");
        scanf("%f%f",&a,&b);
    }    
        while(f(c)*f(b)>0);
        c=(a+b)/2;
        do
        {
            c=c-(f(c)/f1(c));
        printf("\n n=%d\tc=%f",n,c);
        n=n+1;
        }
        while(fabs(f(c))>e);
        printf("\niteration=%d\troot=%f",n,c);
    }


NEWTON FOROWAR:-

#include <stdio.h>
#include <math.h>
main()
{
    float x[10],y[10],X,p=1,u,h,d;
    int n,i,j;
    printf("\n Enter the no of points");
    scanf("%d",&n);
    printf("\n Enter the value of x & y");
    printf("\n x\t y=f(x)");
    for(i=1;i<=n;i++)
    scanf("%f%f",& x[i],& y[i]);
    printf("Enter the value of x at which y required");
    scanf("%f",&X);
    h=x[2]-x[1];
    u=(X-x[n])/h;
    d=y[n];
    for(i=1;i<=n-1;i++)
    {
        for(j=n;j>=i+1;j--)
        {
            y[j]=y[j]-y[j-1];
        }
    p=p*(u+i-1)/i;
    d=d+p*y[n];
    }
    printf("\n The required result=%f at x=%f",d,X);
}


NEWTON BACKWORD:-

# include <stdio.h>
#include <math.h>
main()
{
    float x[10],y[10],sum=0.0,X ,prod;
    int n,i,j;
    printf("\n output");
    printf("\n enter the number of point ");
    scanf("%d",& n);
    printf("\n enter the value of x at which y requird");
    scanf ("%f", & X);
    printf("\n enter the value of x & y ");
    printf("\n x\t y=f(x)");
    for (i=1;i<=n;i++)
    scanf("%f%f",& x[i],&y[i]);
    for (i=1;i<=n;i++)
    {
        prod=y[i];
    for (j=1;j<=n;j++)
    {
        if (j!=i)
        prod =prod*((X-x[j])/(x[i]-x[j]));
        
    }
    sum=sum+prod;
    }
    printf("\n at x=%f\t y=%f",X,sum);
    
}


TRAPAJOIDAL RULE:-

include<stdio.h>
#include<math.h>
float f(float x)
{
    return(cos(x));
}
int main()
{
    float a,b,h,trap;
    int n,i,k;
    printf("enter the value of a,b,h");
    scanf("%f%f%f",&a,&b,&h);
    n=(b-a)/h;
    trap=f(a)+f(b);
    for(k=1;k<=n-1;k++)
    {
        trap=trap+2*f(a+h*k);
    }
    trap=trap*(h/2);
    printf("\n result=%f",trap);
}


SIMSON 3/8 RULE:-

#include <stdio.h>
#include <math.h>
float f(float x)
{
    float f;
    f=1/(1+x*x);
    return(f);
}
main()
{
    float a,b,h,simp;
    int n,k;
    printf("value of a,b,n");
    scanf("%f%f%d",&a,&b,&n);
    h=(b-a)/n;
    simp=f(a)+f(b);
    for(k=1;k<n;k=k+3)
    {
        simp=simp+3*f(a+h*k);
    }
    for(k=2;k<n;k=k+3)
    {
        simp=simp+3*f(a+h*k);
    }
    for(k=3;k<n;k=k+3)
    {
        simp=simp+2*f(a+h*k);
    }
    simp=(simp*3*h)/8;
    printf("\n the required result=%f",simp);
}


EULAR METHOD:-

#include <stdio.h>
#include<math.h>
float f(float x,float y)
{
    return((y-x)/(y+x));
}
main()
{
    float x0,y0,h,xn;
    printf("\n Enter the value of x0,y0,h,xn");
    scanf("%f%f%f%f",&x0,&y0,&h,&xn);
    do{
        printf("the value of y=%f at x=%f",y0,x0);
        y0=y0+h*f(x0,y0);
        x0=x0+h;
    }
    while(x0<=xn);
}


Modified euler method:-


#include <stdio.h>
#include <math.h>
float f(float x,float y)
{
    float f;
    f=((1/(x*x)-y/x));
    return(f);
}
main()
{
    int i,n;
    float x0,y0,xn,h,x,x1,y,y1,y11,y12,e;
    printf("\n enter the value of x0,y0");
    scanf("%f%f",&x0,&y0);
    printf("\n enter the value of xn for which y is required");
    scanf("%f",&xn);
    printf("\n enter the step size");
    scanf("%f",&h);
    printf("\n enter the correction term e");
    printf("%f",&e);
    y1=y0+h*f(x0,y0);
    x1=x0+h;
    do
    {
        printf("\n the value of y=%f at x=%f",y0,x0);
        y11=y0+h*(f(x0,y0)+f(x1,y1))/2.0;
        do
        {
            y1=y11;
            y12=y0+h*(f(x0,y0)+f(x1,y11))/2.0;
        }
        while(fabs(y1-y11)>e);
        x0=x0+h;
        y0=y12;
    }
    while(x0<=xn);
}


Rk4:-

#include <stdio.h>
#include<math.h>
float f(float x,float y)
{
   float f;
   f=x+y*y;
   return(f);
}
main()
{
    float x0,y0,h,xn,k1,k2,k3,k4,k;
    int n,i;
    printf("\n Enter the initial value of x0,y0,\n");
    scanf("%f%f",&x0,&y0);
    printf("\n Enter the value of x at which y is require \n");
    scanf("%f",&xn);
    printf("\n Enter the value of h\n");
    scanf("%f",&h);
    n=(xn-x0)/h;
    for(i=1;i<=n;i++)
    {
        k1=h*f(x0,y0);
        k2=h*f(x0+h/2.0,y0+k1/2.0);
        k3=h*f(x0+h/2.0,y0+k3);
        k4=h*f(x0+h,y0+k3);
        k=(k1+2*k2+2*3+k4)/6;
        x0=x0+h;
        y0=y0+k;
    }
    printf("\n The value of y=%f at x=%f\n",y0,x0);
}